{"version":3,"sources":["../node_modules/@emoji-mart/data/i18n sync /^/.*/.json$","Context/ChatProvider.jsx","components/Authentication/Login.jsx","components/Authentication/Signup.jsx","logo1.png","Pages/Homepage.jsx","components/SingleChat.jsx","config/ChatLogics.jsx","components/miscellaneous/ProfileModal.jsx","components/ScrollableChat.jsx","components/userAvatar/UserBadgeItem.jsx","components/userAvatar/UserListItem.jsx","components/miscellaneous/UpdateGroupChatModal.jsx","components/Chatbox.jsx","components/ChatLoading.jsx","components/miscellaneous/GroupChatModal.jsx","components/MyChats.jsx","components/miscellaneous/SideDrawer.jsx","Pages/Chatpage.jsx","App.js","reportWebVitals.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","ChatContext","createContext","ChatState","useContext","ChatProvider","_ref","children","_useState","useState","_useState2","_slicedToArray","selectedChat","setSelectedChat","_useState3","_useState4","user","setUser","_useState5","_useState6","notification","setNotification","_useState7","_useState8","chats","setChats","history","useHistory","useEffect","userInfo","JSON","parse","localStorage","getItem","push","_jsx","Provider","value","Login","show","setShow","toast","useToast","email","setEmail","password","setPassword","loading","setLoading","submitHandler","_asyncToGenerator","_regeneratorRuntime","mark","_callee","config","_yield$axios$post","data","wrap","_context","prev","next","title","status","duration","isClosable","position","abrupt","headers","axios","post","sent","setItem","stringify","t0","description","response","message","stop","apply","arguments","_jsxs","VStack","spacing","FormControl","isRequired","FormLabel","color","Input","type","placeholder","onChange","target","InputGroup","size","InputRightElement","width","Button","h","bg","onClick","colorScheme","style","marginTop","isLoading","variant","Signup","handleClick","name","setName","confirmpassword","setConfirmpassword","_useState9","_useState10","_useState11","_useState12","pic","setPic","_useState13","_useState14","picLoading","setPicLoading","console","log","p","accept","pics","undefined","FormData","append","fetch","method","body","then","res","json","url","toString","catch","err","postDetails","files","Homepage","socket","selectedChatCompare","Container","maxW","centerContent","Box","d","justifyContent","z-index","backdropFilter","boxShadow","w","m","borderRadius","borderWidth","src","logo","alt","height","Tabs","isFitted","TabList","mb","Tab","TabPanels","TabPanel","isSameSenderMargin","messages","i","userId","length","sender","_id","isSameSender","isLastMessage","isSameUser","getSender","loggedUser","users","_users$","ProfileModal","_useDisclosure","useDisclosure","isOpen","onOpen","onClose","_Fragment","IconButton","background","base","icon","ViewIcon","Modal","isCentered","ModalOverlay","ModalContent","ModalHeader","fontSize","fontFamily","ModalCloseButton","ModalBody","flexDir","alignItems","Image","boxSize","Text","md","ModalFooter","ScrollableChat","ScrollableFeed","gap","Stack","display","Tooltip","label","placement","hasArrow","Avatar","mt","mr","cursor","backgroundColor","concat","marginLeft","padding","maxWidth","content","className","moment","createdAt","calendar","UserBadgeItem","handleFunction","admin","Badge","px","py","CloseIcon","pl","UserListItem","_hover","UpdateGroupChatModal","fetchMessages","fetchAgain","setFetchAgain","groupChatName","setGroupChatName","search","setSearch","searchResult","setSearchResult","renameloading","setRenameLoading","_ChatState","handleSearch","_ref2","query","_yield$axios$get","Authorization","token","get","_x","handleRename","_ref3","_callee2","_yield$axios$put","_context2","put","chatId","chatName","handleAddUser","_ref4","_callee3","user1","_yield$axios$put2","_context3","find","u","groupAdmin","_x2","handleRemove","_ref5","_callee4","_yield$axios$put3","_context4","_x3","flexWrap","pb","ml","Spinner","SingleChat","setMessages","newMessage","setNewMessage","setSocketConnected","istyping","setIsTyping","defaultOptions","loop","autoplay","animationData","rendererSettings","preserveAspectRatio","emit","sendMessage","event","key","_toConsumableArray","io","on","newMessageRecieved","chat","includes","fontWeight","ArrowBackIcon","isGroupChat","toUpperCase","overflowY","alignSelf","margin","onKeyDown","Lottie","options","marginBottom","InputEmoji","Chatbox","ChatLoading","Skeleton","GroupChatModal","selectedUsers","setSelectedUsers","handleSubmit","delUser","filter","sel","slice","userToAdd","MyChats","setLoggedUser","fetchChats","lg","rightIcon","AddIcon","latestMessage","substring","SideDrawer","loadingChat","setLoadingChat","accessChat","c","Menu","MenuButton","NotificationBadge","count","effect","Effect","SCALE","BellIcon","MenuList","notif","MenuItem","n","as","ChevronDownIcon","MenuDivider","removeItem","Drawer","DrawerOverlay","DrawerContent","DrawerHeader","borderBottomWidth","DrawerBody","Chatpage","App","Route","path","component","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","ChakraProvider","BrowserRouter","document","getElementById"],"mappings":"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","file":"static/js/main.fec5c8cf.chunk.js","sourcesContent":["var map = {\n\t\"./ar.json\": 348,\n\t\"./be.json\": 349,\n\t\"./cs.json\": 350,\n\t\"./de.json\": 351,\n\t\"./en.json\": 352,\n\t\"./es.json\": 353,\n\t\"./fa.json\": 354,\n\t\"./fi.json\": 355,\n\t\"./fr.json\": 356,\n\t\"./hi.json\": 357,\n\t\"./it.json\": 358,\n\t\"./ja.json\": 359,\n\t\"./kr.json\": 360,\n\t\"./nl.json\": 361,\n\t\"./pl.json\": 362,\n\t\"./pt.json\": 363,\n\t\"./ru.json\": 364,\n\t\"./sa.json\": 365,\n\t\"./tr.json\": 366,\n\t\"./uk.json\": 367,\n\t\"./vi.json\": 368,\n\t\"./zh.json\": 369\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 347;","import React, { createContext, useContext, useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst ChatContext = createContext();\r\n\r\nconst ChatProvider = ({ children }) => {\r\n  const [selectedChat, setSelectedChat] = useState();\r\n  const [user, setUser] = useState();\r\n  const [notification, setNotification] = useState([]);\r\n  const [chats, setChats] = useState();\r\n\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const userInfo = JSON.parse(localStorage.getItem(\"userInfo\"));\r\n    setUser(userInfo);\r\n\r\n    if (!userInfo) history.push(\"/\");\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [history]);\r\n\r\n  return (\r\n    <ChatContext.Provider\r\n      value={{\r\n        selectedChat,\r\n        setSelectedChat,\r\n        user,\r\n        setUser,\r\n        notification,\r\n        setNotification,\r\n        chats,\r\n        setChats,\r\n      }}\r\n    >\r\n      {children}\r\n    </ChatContext.Provider>\r\n  );\r\n};\r\n\r\nexport const ChatState = () => {\r\n  return useContext(ChatContext);\r\n};\r\n\r\nexport default ChatProvider;\r\n","import { Button } from \"@chakra-ui/button\";\r\nimport { FormControl, FormLabel } from \"@chakra-ui/form-control\";\r\nimport { Input, InputGroup, InputRightElement } from \"@chakra-ui/input\";\r\nimport { VStack } from \"@chakra-ui/layout\";\r\nimport { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useToast } from \"@chakra-ui/react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { ChatState } from \"../../Context/ChatProvider\";\r\n\r\nconst Login = () => {\r\n  const [show, setShow] = useState(false);\r\n  const handleClick = () => setShow(!show);\r\n  const toast = useToast();\r\n  const [email, setEmail] = useState();\r\n  const [password, setPassword] = useState();\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const history = useHistory();\r\n  const { setUser } = ChatState();\r\n\r\n  const submitHandler = async () => {\r\n    setLoading(true);\r\n    if (!email || !password) {\r\n      toast({\r\n        title: \"Please Fill all the Feilds\",\r\n        status: \"warning\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-type\": \"application/json\",\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.post(\r\n        \"/api/user/login\",\r\n        { email, password },\r\n        config\r\n      );\r\n\r\n      toast({\r\n        title: \"Login Successful\",\r\n        status: \"success\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      setUser(data);\r\n      localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n      setLoading(false);\r\n      history.push(\"/chats\");\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error Occured!\",\r\n        description: error.response.data.message,\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <VStack spacing=\"10px\">\r\n      <FormControl id=\"email\" isRequired>\r\n        <FormLabel color=\"white\">Email Address</FormLabel>\r\n        <Input\r\n          color=\"white\"\r\n          value={email}\r\n          type=\"email\"\r\n          placeholder=\"Enter Your Email Address\"\r\n          onChange={(e) => setEmail(e.target.value)}\r\n        />\r\n      </FormControl>\r\n      <FormControl id=\"password\" isRequired>\r\n        <FormLabel color=\"white\">Password</FormLabel>\r\n        <InputGroup size=\"md\">\r\n          <Input\r\n            color=\"white\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            type={show ? \"text\" : \"password\"}\r\n            placeholder=\"Enter password\"\r\n          />\r\n          <InputRightElement width=\"4.5rem\">\r\n            <Button h=\"1.75rem\" size=\"sm\" color=\"white\" bg=\"blue\" onClick={handleClick}>\r\n              {show ? \"Hide\" : \"Show\"}\r\n            </Button>\r\n          </InputRightElement>\r\n        </InputGroup>\r\n      </FormControl>\r\n      <Button\r\n        colorScheme=\"blue\"\r\n        width=\"100%\"\r\n        style={{ marginTop: 15 }}\r\n        onClick={submitHandler}\r\n        isLoading={loading}\r\n      >\r\n        Login\r\n      </Button>\r\n      <Button\r\n        variant=\"solid\"\r\n        colorScheme=\"red\"\r\n        width=\"100%\"\r\n        onClick={() => {\r\n          setEmail(\"guest@example.com\");\r\n          setPassword(\"123456\");\r\n        }}\r\n      >\r\n        Get Guest User Credentials\r\n      </Button>\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import { Button } from \"@chakra-ui/button\";\r\nimport { FormControl, FormLabel } from \"@chakra-ui/form-control\";\r\nimport { Input, InputGroup, InputRightElement } from \"@chakra-ui/input\";\r\nimport { VStack } from \"@chakra-ui/layout\";\r\nimport { useToast } from \"@chakra-ui/toast\";\r\nimport axios from \"axios\";\r\nimport { useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nconst Signup = () => {\r\n  const [show, setShow] = useState(false);\r\n  const handleClick = () => setShow(!show);\r\n  const toast = useToast();\r\n  const history = useHistory();\r\n\r\n  const [name, setName] = useState();\r\n  const [email, setEmail] = useState();\r\n  const [confirmpassword, setConfirmpassword] = useState();\r\n  const [password, setPassword] = useState();\r\n  const [pic, setPic] = useState();\r\n  const [picLoading, setPicLoading] = useState(false);\r\n\r\n  const submitHandler = async () => {\r\n    setPicLoading(true);\r\n    if (!name || !email || !password || !confirmpassword) {\r\n      toast({\r\n        title: \"Please Fill all the Feilds\",\r\n        status: \"warning\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      setPicLoading(false);\r\n      return;\r\n    }\r\n    if (password !== confirmpassword) {\r\n      toast({\r\n        title: \"Passwords Do Not Match\",\r\n        status: \"warning\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      return;\r\n    }\r\n    console.log(name, email, password, pic);\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-type\": \"application/json\",\r\n        },\r\n      };\r\n      const { data } = await axios.post(\r\n        \"/api/user\",\r\n        {\r\n          name,\r\n          email,\r\n          password,\r\n          pic,\r\n        },\r\n        config\r\n      );\r\n      console.log(data);\r\n      toast({\r\n        title: \"Registration Successful\",\r\n        status: \"success\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n      setPicLoading(false);\r\n      history.push(\"/chats\");\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error Occured!\",\r\n        description: error.response.data.message,\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      setPicLoading(false);\r\n    }\r\n  };\r\n\r\n  const postDetails = (pics) => {\r\n    setPicLoading(true);\r\n    if (pics === undefined) {\r\n      toast({\r\n        title: \"Please Select an Image!\",\r\n        status: \"warning\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      return;\r\n    }\r\n    console.log(pics);\r\n    if (pics.type === \"image/jpeg\" || pics.type === \"image/png\") {\r\n      const data = new FormData();\r\n      data.append(\"file\", pics);\r\n      data.append(\"upload_preset\", \"Vartalap\");\r\n      data.append(\"cloud_name\", \"avanishsri31\");\r\n      fetch(\"https://api.cloudinary.com/v1_1/avanishsri31/image/upload\", {\r\n        method: \"post\",\r\n        body: data,\r\n      })\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          setPic(data.url.toString());\r\n          console.log(data.url.toString());\r\n          setPicLoading(false);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          setPicLoading(false);\r\n        });\r\n    } else {\r\n      toast({\r\n        title: \"Please Select an Image!\",\r\n        status: \"warning\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      setPicLoading(false);\r\n      return;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <VStack spacing=\"5px\">\r\n      <FormControl id=\"first-name\" isRequired>\r\n        <FormLabel color=\"white\">Name</FormLabel>\r\n        <Input\r\n          color=\"white\"\r\n          placeholder=\"Enter Your Name\"\r\n          onChange={(e) => setName(e.target.value)}\r\n        />\r\n      </FormControl>\r\n      <FormControl id=\"email\" isRequired>\r\n        <FormLabel color=\"white\">Email Address</FormLabel>\r\n        <Input\r\n          color=\"white\"\r\n          type=\"email\"\r\n          placeholder=\"Enter Your Email Address\"\r\n          onChange={(e) => setEmail(e.target.value)}\r\n        />\r\n      </FormControl>\r\n      <FormControl id=\"password\" isRequired>\r\n        <FormLabel color=\"white\">Password</FormLabel>\r\n        <InputGroup size=\"md\">\r\n          <Input\r\n            color=\"white\"\r\n            type={show ? \"text\" : \"password\"}\r\n            placeholder=\"Enter Password\"\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n          <InputRightElement width=\"4.5rem\">\r\n            <Button h=\"1.75rem\" size=\"sm\" color=\"white\" bg=\"blue\" onClick={handleClick}>\r\n              {show ? \"Hide\" : \"Show\"}\r\n            </Button>\r\n          </InputRightElement>\r\n        </InputGroup>\r\n      </FormControl>\r\n      <FormControl id=\"password\" isRequired>\r\n        <FormLabel color=\"white\">Confirm Password</FormLabel>\r\n        <InputGroup size=\"md\">\r\n          <Input\r\n            color=\"white\"\r\n            type={show ? \"text\" : \"password\"}\r\n            placeholder=\"Confirm password\"\r\n            onChange={(e) => setConfirmpassword(e.target.value)}\r\n          />\r\n          <InputRightElement width=\"4.5rem\">\r\n            <Button h=\"1.75rem\" size=\"sm\" color=\"white\" bg=\"blue\" onClick={handleClick}>\r\n              {show ? \"Hide\" : \"Show\"}\r\n            </Button>\r\n          </InputRightElement>\r\n        </InputGroup>\r\n      </FormControl>\r\n      <FormControl id=\"pic\">\r\n        <FormLabel color=\"white\">Upload your Picture</FormLabel>\r\n        <Input\r\n          type=\"file\"\r\n          p={1.5}\r\n          accept=\"image/*\"\r\n          color=\"grey\"\r\n          onChange={(e) => postDetails(e.target.files[0])}\r\n        />\r\n      </FormControl>\r\n      <Button\r\n        colorScheme=\"blue\"\r\n        width=\"100%\"\r\n        style={{ marginTop: 15 }}\r\n        onClick={submitHandler}\r\n        isLoading={picLoading}\r\n      >\r\n        Sign Up\r\n      </Button>\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","export default __webpack_public_path__ + \"static/media/logo1.25dd46bb.png\";","import {\r\n  Box,\r\n  Container,\r\n  Tab,\r\n  TabList,\r\n  TabPanel,\r\n  TabPanels,\r\n  Tabs,\r\n  // Text,\r\n} from \"@chakra-ui/react\";\r\nimport { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport Login from \"../components/Authentication/Login\";\r\nimport Signup from \"../components/Authentication/Signup\";\r\nimport logo from \"../logo1.png\"\r\n\r\nfunction Homepage() {\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const user = JSON.parse(localStorage.getItem(\"userInfo\"));\r\n\r\n    if (user) history.push(\"/chats\");\r\n  }, [history]);\r\n\r\n  return (\r\n    <Container maxW=\"xl\" centerContent>\r\n      <Box\r\n        d=\"flex\"\r\n        justifyContent=\"center\"\r\n        p={3}\r\n        bg=\"rgba(255,255,255,0.01)\"\r\n        z-index=\"10\"\r\n        backdropFilter=\"blur(25px)\"\r\n        boxShadow=\"-15px 17px 17px rgba(255,255,255,0.1);\"\r\n        w=\"100%\"\r\n        m=\"40px 0 15px 0\"\r\n        borderRadius=\"lg\"\r\n        borderWidth=\"1px\"\r\n        \r\n      >\r\n        <img src={logo} alt=\"\" width=\"150\" height=\"200\"></img>\r\n      </Box>\r\n      <Box bg=\"rgba(255,255,255,0.01)\" z-index=\"10\" backdropFilter=\"blur(30px)\" boxShadow=\"-15px 17px 17px rgba(255,255,255,0.1);\"  w=\"100%\" p={4} borderRadius=\"lg\" borderWidth=\"1px\">\r\n        <Tabs isFitted variant=\"soft-rounded\">\r\n          <TabList mb=\"1em\">\r\n            <Tab>Login</Tab>\r\n            <Tab>Sign Up</Tab>\r\n          </TabList>\r\n          <TabPanels>\r\n            <TabPanel>\r\n              <Login />\r\n            </TabPanel>\r\n            <TabPanel>\r\n              <Signup />\r\n            </TabPanel>\r\n          </TabPanels>\r\n        </Tabs>\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Homepage;\r\n","import { FormControl } from \"@chakra-ui/form-control\";\r\n// import { Input } from \"@chakra-ui/input\";\r\nimport { Box, Text } from \"@chakra-ui/layout\";\r\nimport \"./styles.css\";\r\nimport { IconButton, Spinner, useToast } from \"@chakra-ui/react\";\r\nimport { getSender, getSenderFull } from \"../config/ChatLogics\";\r\nimport { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { ArrowBackIcon } from \"@chakra-ui/icons\";\r\nimport ProfileModal from \"./miscellaneous/ProfileModal\";\r\nimport ScrollableChat from \"./ScrollableChat\";\r\nimport Lottie from \"react-lottie\";\r\nimport animationData from \"../animations/typing.json\";\r\nimport io from \"socket.io-client\";\r\nimport InputEmoji from \"react-input-emoji\";\r\nimport UpdateGroupChatModal from \"./miscellaneous/UpdateGroupChatModal\";\r\nimport { ChatState } from \"../Context/ChatProvider\";\r\nconst ENDPOINT = \"https://vartalap-server.onrender.com\"; \r\nvar socket, selectedChatCompare;\r\n\r\nconst SingleChat = ({ fetchAgain, setFetchAgain }) => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [newMessage, setNewMessage] = useState(\"\");\r\n  const [socketConnected, setSocketConnected] = useState(false);\r\n  const [typing, setTyping] = useState(false);\r\n  const [istyping, setIsTyping] = useState(false);\r\n  const toast = useToast();\r\n\r\n  const defaultOptions = {\r\n    loop: true,\r\n    autoplay: true,\r\n    animationData: animationData,\r\n    rendererSettings: {\r\n      preserveAspectRatio: \"xMidYMid slice\",\r\n    },\r\n  };\r\n  const { selectedChat, setSelectedChat, user, notification, setNotification } =\r\n    ChatState();\r\n\r\n   \r\n\r\n  const fetchMessages = async () => {\r\n    if (!selectedChat) return;\r\n\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n\r\n      setLoading(true);\r\n\r\n      const { data } = await axios.get(\r\n        `/api/message/${selectedChat._id}`,\r\n        config\r\n      );\r\n      setMessages(data);\r\n      setLoading(false);\r\n\r\n      socket.emit(\"join chat\", selectedChat._id);\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error Occured!\",\r\n        description: \"Failed to Load the Messages\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const sendMessage = async (event) => {\r\n    if (event.key === \"Enter\" && newMessage) {\r\n      socket.emit(\"stop typing\", selectedChat._id);\r\n      try {\r\n        const config = {\r\n          headers: {\r\n            \"Content-type\": \"application/json\",\r\n            Authorization: `Bearer ${user.token}`,\r\n          },\r\n        };\r\n        setNewMessage(\"\");\r\n        const { data } = await axios.post(\r\n          \"/api/message\",\r\n          {\r\n            content: newMessage,\r\n            chatId: selectedChat,\r\n          },\r\n          config\r\n        );\r\n        socket.emit(\"new message\", data);\r\n        setMessages([...messages, data]);\r\n      } catch (error) {\r\n        toast({\r\n          title: \"Error Occured!\",\r\n          description: \"Failed to send the Message\",\r\n          status: \"error\",\r\n          duration: 5000,\r\n          isClosable: true,\r\n          position: \"bottom\",\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    socket = io(ENDPOINT);\r\n    socket.emit(\"setup\", user);\r\n    socket.on(\"connected\", () => setSocketConnected(true));\r\n    socket.on(\"typing\", () => setIsTyping(true));\r\n    socket.on(\"stop typing\", () => setIsTyping(false));\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchMessages();\r\n\r\n    selectedChatCompare = selectedChat;\r\n    // eslint-disable-next-line\r\n  }, [selectedChat]);\r\n\r\n  useEffect(() => {\r\n    socket.on(\"message recieved\", (newMessageRecieved) => {\r\n      if (\r\n        !selectedChatCompare || // if chat is not selected or doesn't match current chat\r\n        selectedChatCompare._id !== newMessageRecieved.chat._id\r\n      ) {\r\n        if (!notification.includes(newMessageRecieved)) {\r\n          setNotification([newMessageRecieved, ...notification]);\r\n          setFetchAgain(!fetchAgain);\r\n        }\r\n      } else {\r\n        setMessages([...messages, newMessageRecieved]);\r\n      }\r\n    });\r\n  });\r\n\r\n  const typingHandler = (e) => {\r\n    setNewMessage(e.value);\r\n\r\n    if (!socketConnected) return;\r\n\r\n    if (!typing) {\r\n      setTyping(true);\r\n      socket.emit(\"typing\", selectedChat._id);\r\n    }\r\n    let lastTypingTime = new Date().getTime();\r\n    var timerLength = 3000;\r\n    setTimeout(() => {\r\n      var timeNow = new Date().getTime();\r\n      var timeDiff = timeNow - lastTypingTime;\r\n      if (timeDiff >= timerLength && typing) {\r\n        socket.emit(\"stop typing\", selectedChat._id);\r\n        setTyping(false);\r\n      }\r\n    }, timerLength);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {selectedChat ? (\r\n        <>\r\n          <Text\r\n            fontSize={{ base: \"28px\", md: \"30px\" }}\r\n            pb={3}\r\n            px={2}\r\n            w=\"100%\"\r\n            fontFamily=\"Work sans\"\r\n            fontWeight=\"bold\"\r\n            d=\"flex\"\r\n            justifyContent={{ base: \"space-between\" }}\r\n            alignItems=\"center\"\r\n            color=\"white\"\r\n          >\r\n            <IconButton\r\n              bg=\"#38B2AC\"\r\n              d={{ base: \"flex\", md: \"none\" }}\r\n              icon={<ArrowBackIcon />}\r\n              onClick={() => setSelectedChat(\"\")}\r\n            />\r\n            {messages &&\r\n              (!selectedChat.isGroupChat ? (\r\n                <>\r\n                  {getSender(user, selectedChat.users)}\r\n                  <ProfileModal\r\n                    user={getSenderFull(user, selectedChat.users)}\r\n                  />\r\n                </>\r\n              ) : (\r\n                <>\r\n                  {selectedChat.chatName.toUpperCase()}\r\n                  <UpdateGroupChatModal\r\n                    fetchMessages={fetchMessages}\r\n                    fetchAgain={fetchAgain}\r\n                    setFetchAgain={setFetchAgain}\r\n                  />\r\n                </>\r\n              ))}\r\n          </Text>\r\n          <Box \r\n            d=\"flex\"\r\n            flexDir=\"column\"\r\n            justifyContent=\"flex-end\"\r\n            p={3}\r\n            bg=\"rgba(255,255,255,0.01)\"\r\n            z-index=\"10\"\r\n            backdropFilter=\"blur(25px)\"\r\n            boxShadow=\"-15px 17px 17px rgba(255,255,255,0.1);\"\r\n            w=\"100%\"\r\n            h=\"100%\"\r\n            borderRadius=\"lg\"\r\n            overflowY=\"hidden\"\r\n          >\r\n            {loading ? (\r\n              <Spinner\r\n                size=\"xl\"\r\n                w={20}\r\n                h={20}\r\n                alignSelf=\"center\"\r\n                margin=\"auto\"\r\n              />\r\n            ) : (\r\n              <div className=\"messages\">\r\n                <ScrollableChat messages={messages} />\r\n              </div>\r\n            )}\r\n          \r\n            <FormControl\r\n              onKeyDown={sendMessage}\r\n              id=\"first-name\"\r\n              isRequired\r\n              mt={3}\r\n            >\r\n              {istyping ? (\r\n                <div>\r\n                  <Lottie\r\n                    options={defaultOptions}\r\n                    // height={50}\r\n                    width={70}\r\n                    style={{ marginBottom: 15, marginLeft: 0,}}\r\n              \r\n                  />\r\n                </div>\r\n              ) : (\r\n                <></>\r\n              )}\r\n              \r\n              <InputEmoji\r\n                variant=\"filled\"\r\n                bg=\"#E0E0E0\"\r\n                color=\"white\"\r\n                placeholder=\"Enter a message..\"\r\n                value={newMessage}\r\n                onChange={setNewMessage}\r\n                \r\n              />\r\n               \r\n              \r\n            </FormControl>\r\n           \r\n          </Box>\r\n\r\n        </>\r\n      ) : (\r\n        // to get socket.io on same page\r\n        <Box d=\"flex\" alignItems=\"center\" justifyContent=\"center\" h=\"100%\" color=\"white\">\r\n          <Text fontSize=\"3xl\" pb={3} fontFamily=\"Work sans\" fontWeight=\"bold\">\r\n            Click on a user to start chatting\r\n          </Text>\r\n        </Box>\r\n      )}\r\n    </>\r\n  );\r\n\r\n};\r\n\r\n\r\n\r\nexport default SingleChat;\r\n","export const isSameSenderMargin = (messages, m, i, userId) => {\r\n  // console.log(i === messages.length - 1);\r\n\r\n  if (\r\n    i < messages.length - 1 &&\r\n    messages[i + 1].sender._id === m.sender._id &&\r\n    messages[i].sender._id !== userId\r\n  )\r\n    return 33;\r\n  else if (\r\n    (i < messages.length - 1 &&\r\n      messages[i + 1].sender._id !== m.sender._id &&\r\n      messages[i].sender._id !== userId) ||\r\n    (i === messages.length - 1 && messages[i].sender._id !== userId)\r\n  )\r\n    return 0;\r\n  else return \"auto\";\r\n};\r\n\r\nexport const isSameSender = (messages, m, i, userId) => {\r\n  return (\r\n    i < messages.length - 1 &&\r\n    (messages[i + 1].sender._id !== m.sender._id ||\r\n      messages[i + 1].sender._id === undefined) &&\r\n    messages[i].sender._id !== userId\r\n  );\r\n};\r\n\r\nexport const isLastMessage = (messages, i, userId) => {\r\n  return (\r\n    i === messages.length - 1 &&\r\n    messages[messages.length - 1].sender._id !== userId &&\r\n    messages[messages.length - 1].sender._id\r\n  );\r\n};\r\n\r\nexport const isSameUser = (messages, m, i) => {\r\n  return i > 0 && messages[i - 1].sender._id === m.sender._id;\r\n};\r\n\r\nexport const getSender = (loggedUser, users) => {\r\n  return users[0]?._id === loggedUser?._id ? users[1].name : users[0].name;\r\n};\r\n\r\nexport const getSenderFull = (loggedUser, users) => {\r\n  return users[0]._id === loggedUser._id ? users[1] : users[0];\r\n};\r\n","import { ViewIcon } from \"@chakra-ui/icons\";\r\nimport {\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalFooter,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  Button,\r\n  useDisclosure,\r\n  IconButton,\r\n  Text,\r\n  Image,\r\n} from \"@chakra-ui/react\";\r\n\r\nconst ProfileModal = ({ user, children }) => {\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n\r\n  return (\r\n    <>\r\n      {children ? (\r\n        <span onClick={onOpen}>{children}</span>\r\n      ) : (\r\n        <IconButton background=\"#38B2AC\" d={{ base: \"flex\" }} icon={<ViewIcon />} onClick={onOpen} />\r\n      )}\r\n      <Modal size=\"lg\" onClose={onClose} isOpen={isOpen} isCentered>\r\n        <ModalOverlay />\r\n        <ModalContent h=\"410px\">\r\n          <ModalHeader\r\n            fontSize=\"40px\"\r\n            fontFamily=\"Work sans\"\r\n            d=\"flex\"\r\n            justifyContent=\"center\"\r\n          >\r\n            {user.name}\r\n          </ModalHeader>\r\n          <ModalCloseButton />\r\n          <ModalBody\r\n            d=\"flex\"\r\n            flexDir=\"column\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-between\"\r\n          >\r\n            <Image\r\n              borderRadius=\"full\"\r\n              boxSize=\"150px\"\r\n              src={user.pic}\r\n              alt={user.name}\r\n            />\r\n            <Text\r\n              fontSize={{ base: \"28px\", md: \"30px\" }}\r\n              fontFamily=\"Work sans\"\r\n            >\r\n              Email: {user.email}\r\n            </Text>\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button onClick={onClose}>Close</Button>\r\n          </ModalFooter>\r\n        </ModalContent>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProfileModal;\r\n","import { Avatar } from \"@chakra-ui/avatar\";\r\nimport { Tooltip } from \"@chakra-ui/tooltip\";\r\nimport ScrollableFeed from \"react-scrollable-feed\";\r\nimport moment from \"moment\";\r\nimport { Stack } from \"react-bootstrap\"\r\nimport \"./styles.css\";\r\nimport {\r\n  isLastMessage,\r\n  isSameSender,\r\n  isSameSenderMargin,\r\n  isSameUser,\r\n} from \"../config/ChatLogics\";\r\nimport { ChatState } from \"../Context/ChatProvider\";\r\n\r\nconst ScrollableChat = ({ messages }) => {\r\n  const { user } = ChatState();\r\n\r\n  return (\r\n    <ScrollableFeed gap={4}>\r\n      {messages &&\r\n        messages.map((m, i) => (\r\n          <Stack style={{ display: \"flex\" }} key={m._id} >\r\n            {(isSameSender(messages, m, i, user._id) ||\r\n              isLastMessage(messages, i, user._id)) && (\r\n              <Tooltip label={m.sender.name} placement=\"bottom-start\" hasArrow>\r\n                <Avatar\r\n                  mt=\"7px\"\r\n                  mr={1}\r\n                  size=\"sm\"\r\n                  cursor=\"pointer\"\r\n                  name={m.sender.name}\r\n                  src={m.sender.pic}\r\n                />\r\n              </Tooltip>\r\n            )}\r\n            <span\r\n              style={{\r\n                backgroundColor: `${\r\n                  m.sender._id === user._id ? \"#018c31\" : \"#282828\"\r\n                }`,\r\n                marginLeft: isSameSenderMargin(messages, m, i, user._id),\r\n                marginTop: isSameUser(messages, m, i, user._id) ? 5 : 10,\r\n                color:\"white\",\r\n                borderRadius: \"20px\",\r\n                padding: \"10px 15px\",\r\n                maxWidth: \"75%\",\r\n                \r\n              \r\n                \r\n              }}\r\n            >\r\n              {m.content}\r\n            </span>\r\n            <span className=\"message-footer\">{moment(m.createdAt).calendar()}</span>\r\n            \r\n          </Stack>\r\n        ))}\r\n    </ScrollableFeed>\r\n  );\r\n};\r\n\r\nexport default ScrollableChat;\r\n","import { CloseIcon } from \"@chakra-ui/icons\";\r\nimport { Badge } from \"@chakra-ui/layout\";\r\n\r\nconst UserBadgeItem = ({ user, handleFunction, admin }) => {\r\n  return (\r\n    <Badge\r\n      px={2}\r\n      py={1}\r\n      borderRadius=\"lg\"\r\n      m={1}\r\n      mb={2}\r\n      variant=\"solid\"\r\n      fontSize={12}\r\n      colorScheme=\"purple\"\r\n      cursor=\"pointer\"\r\n      onClick={handleFunction}\r\n    >\r\n      {user.name}\r\n      {admin === user._id && <span> (Admin)</span>}\r\n      <CloseIcon pl={1} />\r\n    </Badge>\r\n  );\r\n};\r\n\r\nexport default UserBadgeItem;\r\n","import { Avatar } from \"@chakra-ui/avatar\";\r\nimport { Box, Text } from \"@chakra-ui/layout\";\r\nimport { ChatState } from \"../../Context/ChatProvider\";\r\n\r\nconst UserListItem = ({ handleFunction }) => {\r\n  const { user } = ChatState();\r\n\r\n  return (\r\n    <Box\r\n      onClick={handleFunction}\r\n      cursor=\"pointer\"\r\n      bg=\"#E8E8E8\"\r\n      _hover={{\r\n        background: \"#38B2AC\",\r\n        color: \"white\",\r\n      }}\r\n      w=\"100%\"\r\n      d=\"flex\"\r\n      alignItems=\"center\"\r\n      color=\"black\"\r\n      px={3}\r\n      py={2}\r\n      mb={2}\r\n      borderRadius=\"lg\"\r\n    >\r\n      <Avatar\r\n        mr={2}\r\n        size=\"sm\"\r\n        cursor=\"pointer\"\r\n        name={user.name}\r\n        src={user.pic}\r\n      />\r\n      <Box>\r\n        <Text>{user.name}</Text>\r\n        <Text fontSize=\"xs\">\r\n          <b>Email : </b>\r\n          {user.email}\r\n        </Text>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default UserListItem;\r\n","import { ViewIcon } from \"@chakra-ui/icons\";\r\nimport {\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalFooter,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  Button,\r\n  useDisclosure,\r\n  FormControl,\r\n  Input,\r\n  useToast,\r\n  Box,\r\n  IconButton,\r\n  Spinner,\r\n} from \"@chakra-ui/react\";\r\nimport axios from \"axios\";\r\nimport { useState } from \"react\";\r\nimport { ChatState } from \"../../Context/ChatProvider\";\r\nimport UserBadgeItem from \"../userAvatar/UserBadgeItem\";\r\nimport UserListItem from \"../userAvatar/UserListItem\";\r\n\r\nconst UpdateGroupChatModal = ({ fetchMessages, fetchAgain, setFetchAgain }) => {\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const [groupChatName, setGroupChatName] = useState();\r\n  const [search, setSearch] = useState(\"\");\r\n  const [searchResult, setSearchResult] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [renameloading, setRenameLoading] = useState(false);\r\n  const toast = useToast();\r\n\r\n  const { selectedChat, setSelectedChat, user } = ChatState();\r\n\r\n  const handleSearch = async (query) => {\r\n    setSearch(query);\r\n    if (!query) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setLoading(true);\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n      const { data } = await axios.get(`/api/user?search=${search}`, config);\r\n      console.log(data);\r\n      setLoading(false);\r\n      setSearchResult(data);\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error Occured!\",\r\n        description: \"Failed to Load the Search Results\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom-left\",\r\n      });\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleRename = async () => {\r\n    if (!groupChatName) return;\r\n\r\n    try {\r\n      setRenameLoading(true);\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n      const { data } = await axios.put(\r\n        `/api/chat/rename`,\r\n        {\r\n          chatId: selectedChat._id,\r\n          chatName: groupChatName,\r\n        },\r\n        config\r\n      );\r\n\r\n      console.log(data._id);\r\n      // setSelectedChat(\"\");\r\n      setSelectedChat(data);\r\n      setFetchAgain(!fetchAgain);\r\n      setRenameLoading(false);\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error Occured!\",\r\n        description: error.response.data.message,\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      setRenameLoading(false);\r\n    }\r\n    setGroupChatName(\"\");\r\n  };\r\n\r\n  const handleAddUser = async (user1) => {\r\n    if (selectedChat.users.find((u) => u._id === user1._id)) {\r\n      toast({\r\n        title: \"User Already in group!\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (selectedChat.groupAdmin._id !== user._id) {\r\n      toast({\r\n        title: \"Only admins can add someone!\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setLoading(true);\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n      const { data } = await axios.put(\r\n        `/api/chat/groupadd`,\r\n        {\r\n          chatId: selectedChat._id,\r\n          userId: user1._id,\r\n        },\r\n        config\r\n      );\r\n\r\n      setSelectedChat(data);\r\n      setFetchAgain(!fetchAgain);\r\n      setLoading(false);\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error Occured!\",\r\n        description: error.response.data.message,\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      setLoading(false);\r\n    }\r\n    setGroupChatName(\"\");\r\n  };\r\n\r\n  const handleRemove = async (user1) => {\r\n    if (selectedChat.groupAdmin._id !== user._id && user1._id !== user._id) {\r\n      toast({\r\n        title: \"Only admins can remove someone!\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setLoading(true);\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n      const { data } = await axios.put(\r\n        `/api/chat/groupremove`,\r\n        {\r\n          chatId: selectedChat._id,\r\n          userId: user1._id,\r\n        },\r\n        config\r\n      );\r\n\r\n      user1._id === user._id ? setSelectedChat() : setSelectedChat(data);\r\n      setFetchAgain(!fetchAgain);\r\n      fetchMessages();\r\n      setLoading(false);\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error Occured!\",\r\n        description: error.response.data.message,\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      setLoading(false);\r\n    }\r\n    setGroupChatName(\"\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <IconButton background=\"#38B2AC\" d={{ base: \"flex\" }} icon={<ViewIcon />} onClick={onOpen} />\r\n\r\n      <Modal onClose={onClose} isOpen={isOpen} isCentered>\r\n        <ModalOverlay />\r\n        <ModalContent>\r\n          <ModalHeader\r\n            fontSize=\"35px\"\r\n            fontFamily=\"Work sans\"\r\n            d=\"flex\"\r\n            justifyContent=\"center\"\r\n          >\r\n            {selectedChat.chatName}\r\n          </ModalHeader>\r\n\r\n          <ModalCloseButton />\r\n          <ModalBody d=\"flex\" flexDir=\"column\" alignItems=\"center\">\r\n            <Box w=\"100%\" d=\"flex\" flexWrap=\"wrap\" pb={3}>\r\n              {selectedChat.users.map((u) => (\r\n                <UserBadgeItem\r\n                  key={u._id}\r\n                  user={u}\r\n                  admin={selectedChat.groupAdmin}\r\n                  handleFunction={() => handleRemove(u)}\r\n                />\r\n              ))}\r\n            </Box>\r\n            <FormControl d=\"flex\">\r\n              <Input\r\n                placeholder=\"Chat Name\"\r\n                mb={3}\r\n                value={groupChatName}\r\n                onChange={(e) => setGroupChatName(e.target.value)}\r\n              />\r\n              <Button\r\n                variant=\"solid\"\r\n                colorScheme=\"teal\"\r\n                ml={1}\r\n                isLoading={renameloading}\r\n                onClick={handleRename}\r\n              >\r\n                Update\r\n              </Button>\r\n            </FormControl>\r\n            <FormControl>\r\n              <Input\r\n                placeholder=\"Add User to group\"\r\n                mb={1}\r\n                onChange={(e) => handleSearch(e.target.value)}\r\n              />\r\n            </FormControl>\r\n\r\n            {loading ? (\r\n              <Spinner size=\"lg\" />\r\n            ) : (\r\n              searchResult?.map((user) => (\r\n                <UserListItem\r\n                  key={user._id}\r\n                  user={user}\r\n                  handleFunction={() => handleAddUser(user)}\r\n                />\r\n              ))\r\n            )}\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button onClick={() => handleRemove(user)} colorScheme=\"red\">\r\n              Leave Group\r\n            </Button>\r\n          </ModalFooter>\r\n        </ModalContent>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UpdateGroupChatModal;\r\n","import { Box } from \"@chakra-ui/layout\";\r\nimport \"./styles.css\";\r\nimport SingleChat from \"./SingleChat\";\r\nimport { ChatState } from \"../Context/ChatProvider\";\r\n\r\nconst Chatbox = ({ fetchAgain, setFetchAgain }) => {\r\n  const { selectedChat } = ChatState();\r\n\r\n  return (\r\n    <Box\r\n      d={{ base: selectedChat ? \"flex\" : \"none\", md: \"flex\" }}\r\n      alignItems=\"center\"\r\n      flexDir=\"column\"\r\n      p={3}\r\n      bg=\"rgba(255,255,255,0.01)\"\r\n      z-index=\"10\"\r\n      backdropFilter=\"blur(25px)\"\r\n      boxShadow=\"-15px 17px 17px rgba(255,255,255,0.1);\"\r\n      w={{ base: \"100%\", md: \"68%\" }}\r\n      borderRadius=\"lg\"\r\n      borderWidth=\"1px\"\r\n    >\r\n      <SingleChat fetchAgain={fetchAgain} setFetchAgain={setFetchAgain} />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Chatbox;\r\n","import { Stack } from \"@chakra-ui/layout\";\r\nimport { Skeleton } from \"@chakra-ui/skeleton\";\r\n\r\nconst ChatLoading = () => {\r\n  return (\r\n    <Stack>\r\n      <Skeleton height=\"45px\" />\r\n      <Skeleton height=\"45px\" />\r\n      <Skeleton height=\"45px\" />\r\n      <Skeleton height=\"45px\" />\r\n      <Skeleton height=\"45px\" />\r\n      <Skeleton height=\"45px\" />\r\n      <Skeleton height=\"45px\" />\r\n      <Skeleton height=\"45px\" />\r\n      <Skeleton height=\"45px\" />\r\n      <Skeleton height=\"45px\" />\r\n      <Skeleton height=\"45px\" />\r\n      <Skeleton height=\"45px\" />\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default ChatLoading;\r\n","import {\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalFooter,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  Button,\r\n  useDisclosure,\r\n  FormControl,\r\n  Input,\r\n  useToast,\r\n  Box,\r\n} from \"@chakra-ui/react\";\r\nimport axios from \"axios\";\r\nimport { useState } from \"react\";\r\nimport { ChatState } from \"../../Context/ChatProvider\";\r\nimport UserBadgeItem from \"../userAvatar/UserBadgeItem\";\r\nimport UserListItem from \"../userAvatar/UserListItem\";\r\n\r\nconst GroupChatModal = ({ children }) => {\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const [groupChatName, setGroupChatName] = useState();\r\n  const [selectedUsers, setSelectedUsers] = useState([]);\r\n  const [search, setSearch] = useState(\"\");\r\n  const [searchResult, setSearchResult] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const toast = useToast();\r\n\r\n  const { user, chats, setChats } = ChatState();\r\n\r\n  const handleGroup = (userToAdd) => {\r\n    if (selectedUsers.includes(userToAdd)) {\r\n      toast({\r\n        title: \"User already added\",\r\n        status: \"warning\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"top\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    setSelectedUsers([...selectedUsers, userToAdd]);\r\n  };\r\n\r\n  const handleSearch = async (query) => {\r\n    setSearch(query);\r\n    if (!query) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setLoading(true);\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n      const { data } = await axios.get(`/api/user?search=${search}`, config);\r\n      console.log(data);\r\n      setLoading(false);\r\n      setSearchResult(data);\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error Occured!\",\r\n        description: \"Failed to Load the Search Results\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom-left\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleDelete = (delUser) => {\r\n    setSelectedUsers(selectedUsers.filter((sel) => sel._id !== delUser._id));\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    if (!groupChatName || !selectedUsers) {\r\n      toast({\r\n        title: \"Please fill all the feilds\",\r\n        status: \"warning\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"top\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n      const { data } = await axios.post(\r\n        `/api/chat/group`,\r\n        {\r\n          name: groupChatName,\r\n          users: JSON.stringify(selectedUsers.map((u) => u._id)),\r\n        },\r\n        config\r\n      );\r\n      setChats([data, ...chats]);\r\n      onClose();\r\n      toast({\r\n        title: \"New Group Chat Created!\",\r\n        status: \"success\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Failed to Create the Chat!\",\r\n        description: error.response.data,\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <span onClick={onOpen}>{children}</span>\r\n\r\n      <Modal onClose={onClose} isOpen={isOpen} isCentered>\r\n        <ModalOverlay />\r\n        <ModalContent>\r\n          <ModalHeader\r\n            fontSize=\"35px\"\r\n            fontFamily=\"Work sans\"\r\n            d=\"flex\"\r\n            justifyContent=\"center\"\r\n          >\r\n            Create Group Chat\r\n          </ModalHeader>\r\n          <ModalCloseButton />\r\n          <ModalBody d=\"flex\" flexDir=\"column\" alignItems=\"center\">\r\n            <FormControl>\r\n              <Input\r\n                placeholder=\"Chat Name\"\r\n                mb={3}\r\n                onChange={(e) => setGroupChatName(e.target.value)}\r\n              />\r\n            </FormControl>\r\n            <FormControl>\r\n              <Input\r\n                placeholder=\"Add Users eg: John, Piyush, Jane\"\r\n                mb={1}\r\n                onChange={(e) => handleSearch(e.target.value)}\r\n              />\r\n            </FormControl>\r\n            <Box w=\"100%\" d=\"flex\" flexWrap=\"wrap\">\r\n              {selectedUsers.map((u) => (\r\n                <UserBadgeItem\r\n                  key={u._id}\r\n                  user={u}\r\n                  handleFunction={() => handleDelete(u)}\r\n                />\r\n              ))}\r\n            </Box>\r\n            {loading ? (\r\n              // <ChatLoading />\r\n              <div>Loading...</div>\r\n            ) : (\r\n              searchResult\r\n                ?.slice(0, 4)\r\n                .map((user) => (\r\n                  <UserListItem\r\n                    key={user._id}\r\n                    user={user}\r\n                    handleFunction={() => handleGroup(user)}\r\n                  />\r\n                ))\r\n            )}\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button onClick={handleSubmit} colorScheme=\"blue\">\r\n              Create Chat\r\n            </Button>\r\n          </ModalFooter>\r\n        </ModalContent>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GroupChatModal;\r\n","import { AddIcon } from \"@chakra-ui/icons\";\r\nimport { Box, Stack, Text } from \"@chakra-ui/layout\";\r\nimport { useToast } from \"@chakra-ui/toast\";\r\nimport axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { getSender } from \"../config/ChatLogics\";\r\nimport ChatLoading from \"./ChatLoading\";\r\nimport GroupChatModal from \"./miscellaneous/GroupChatModal\";\r\nimport { Button } from \"@chakra-ui/react\";\r\nimport { ChatState } from \"../Context/ChatProvider\";\r\n\r\nconst MyChats = ({ fetchAgain }) => {\r\n  const [loggedUser, setLoggedUser] = useState();\r\n\r\n  const { selectedChat, setSelectedChat, user, chats, setChats } = ChatState();\r\n\r\n  const toast = useToast();\r\n\r\n  const fetchChats = async () => {\r\n    // console.log(user._id);\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.get(\"/api/chat\", config);\r\n      setChats(data);\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error Occured!\",\r\n        description: \"Failed to Load the chats\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom-left\",\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setLoggedUser(JSON.parse(localStorage.getItem(\"userInfo\")));\r\n    fetchChats();\r\n    // eslint-disable-next-line\r\n  }, [fetchAgain]);\r\n\r\n  return (\r\n    <Box\r\n      d={{ base: selectedChat ? \"none\" : \"flex\", md: \"flex\" }}\r\n      flexDir=\"column\"\r\n      alignItems=\"center\"\r\n      p={3}\r\n      bg=\"rgba(255,255,255,0.01)\"\r\n      \r\n      color=\"white\"\r\n      w={{ base: \"100%\", md: \"31%\" }}\r\n      borderRadius=\"lg\"\r\n      borderWidth=\"1px\"\r\n    >\r\n      <Box\r\n        pb={3}\r\n        px={3}\r\n        fontSize={{ base: \"28px\", md: \"30px\" }}\r\n        fontFamily=\"Work sans\"\r\n        fontWeight=\"bold\"\r\n        d=\"flex\"\r\n        w=\"100%\"\r\n        justifyContent=\"space-between\"\r\n        alignItems=\"center\"\r\n      >\r\n        My Chats\r\n        <GroupChatModal>\r\n          <Button\r\n            d=\"flex\"\r\n            fontSize={{ base: \"17px\", md: \"10px\", lg: \"17px\" }}\r\n            color=\"black\"\r\n            \r\n            rightIcon={<AddIcon />}\r\n          >\r\n            New Group Chat\r\n          </Button>\r\n        </GroupChatModal>\r\n      </Box>\r\n      <Box\r\n        d=\"flex\"\r\n        flexDir=\"column\"\r\n        p={3}\r\n        bg=\"rgba(255,255,255,0.01)\"\r\n        z-index=\"10\"\r\n        backdropFilter=\"blur(25px)\"\r\n        boxShadow=\"-15px 17px 17px rgba(255,255,255,0.1);\"\r\n        w=\"100%\"\r\n        h=\"100%\"\r\n        borderRadius=\"lg\"\r\n        overflowY=\"hidden\"\r\n      >\r\n        {chats ? (\r\n          <Stack overflowY=\"scroll\">\r\n            {chats.map((chat) => (\r\n              <Box\r\n                onClick={() => setSelectedChat(chat)}\r\n                cursor=\"pointer\"\r\n                bg={selectedChat === chat ? \"#38B2AC\" : \"#E8E8E8\"}\r\n                color={selectedChat === chat ? \"white\" : \"black\"}\r\n                px={3}\r\n                py={2}\r\n                borderRadius=\"lg\"\r\n                key={chat._id}\r\n              >\r\n                <Text>\r\n                  {!chat.isGroupChat\r\n                    ? getSender(loggedUser, chat.users)\r\n                    : chat.chatName}\r\n                </Text>\r\n                {chat.latestMessage && (\r\n                  <Text fontSize=\"xs\">\r\n                    <b>{chat.latestMessage.sender.name} : </b>\r\n                    {chat.latestMessage.content.length > 50\r\n                      ? chat.latestMessage.content.substring(0, 51) + \"...\"\r\n                      : chat.latestMessage.content}\r\n                  </Text>\r\n                )}\r\n              </Box>\r\n            ))}\r\n          </Stack>\r\n        ) : (\r\n          <ChatLoading />\r\n        )}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default MyChats;\r\n","import { Button } from \"@chakra-ui/button\";\r\nimport { useDisclosure } from \"@chakra-ui/hooks\";\r\nimport { Input } from \"@chakra-ui/input\";\r\nimport { Box, Text } from \"@chakra-ui/layout\";\r\nimport logo from \"../../logo1.png\"\r\nimport {\r\n  Menu,\r\n  MenuButton,\r\n  MenuDivider,\r\n  MenuItem,\r\n  MenuList,\r\n} from \"@chakra-ui/menu\";\r\nimport {\r\n  Drawer,\r\n  DrawerBody,\r\n  DrawerContent,\r\n  DrawerHeader,\r\n  DrawerOverlay,\r\n} from \"@chakra-ui/modal\";\r\nimport { Tooltip } from \"@chakra-ui/tooltip\";\r\nimport { BellIcon, ChevronDownIcon } from \"@chakra-ui/icons\";\r\nimport { Avatar } from \"@chakra-ui/avatar\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useToast } from \"@chakra-ui/toast\";\r\nimport ChatLoading from \"../ChatLoading\";\r\nimport { Spinner } from \"@chakra-ui/spinner\";\r\nimport ProfileModal from \"./ProfileModal\";\r\nimport NotificationBadge from \"react-notification-badge\";\r\nimport { Effect } from \"react-notification-badge\";\r\nimport { getSender } from \"../../config/ChatLogics\";\r\nimport UserListItem from \"../userAvatar/UserListItem\";\r\nimport { ChatState } from \"../../Context/ChatProvider\";\r\n\r\nfunction SideDrawer() {\r\n  const [search, setSearch] = useState(\"\");\r\n  const [searchResult, setSearchResult] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [loadingChat, setLoadingChat] = useState(false);\r\n\r\n  const {\r\n    setSelectedChat,\r\n    user,\r\n    notification,\r\n    setNotification,\r\n    chats,\r\n    setChats,\r\n  } = ChatState();\r\n\r\n  const toast = useToast();\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const history = useHistory();\r\n\r\n  const logoutHandler = () => {\r\n    localStorage.removeItem(\"userInfo\");\r\n    history.push(\"/\");\r\n  };\r\n\r\n  const handleSearch = async () => {\r\n    if (!search) {\r\n      toast({\r\n        title: \"Please Enter something in search\",\r\n        status: \"warning\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"top-left\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setLoading(true);\r\n\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.get(`/api/user?search=${search}`, config);\r\n\r\n      setLoading(false);\r\n      setSearchResult(data);\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error Occured!\",\r\n        description: \"Failed to Load the Search Results\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom-left\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const accessChat = async (userId) => {\r\n    console.log(userId);\r\n\r\n    try {\r\n      setLoadingChat(true);\r\n      const config = {\r\n        headers: {\r\n          \"Content-type\": \"application/json\",\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n      const { data } = await axios.post(`/api/chat`, { userId }, config);\r\n\r\n      if (!chats.find((c) => c._id === data._id)) setChats([data, ...chats]);\r\n      setSelectedChat(data);\r\n      setLoadingChat(false);\r\n      onClose();\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error fetching the chat\",\r\n        description: error.message,\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom-left\",\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box\r\n        d=\"flex\"\r\n        justifyContent=\"space-between\"\r\n        alignItems=\"center\"\r\n        bg=\"white\"\r\n        w=\"100%\"\r\n        p=\"5px 10px 5px 10px\"\r\n        borderWidth=\"5px\"\r\n      >\r\n        <Tooltip label=\"Search Users to chat\" hasArrow placement=\"bottom-end\">\r\n          <Button variant=\"ghost\" onClick={onOpen}>\r\n            <i className=\"fas fa-search\"></i>\r\n            <Text d={{ base: \"none\", md: \"flex\" }} px={4}>\r\n              Search User\r\n            </Text>\r\n          </Button>\r\n        </Tooltip>\r\n        <img src={logo} alt=\"\" width=\"120\" height=\"150\"></img>\r\n        <div>\r\n          <Menu>\r\n            <MenuButton p={1}>\r\n              <NotificationBadge\r\n                count={notification.length}\r\n                effect={Effect.SCALE}\r\n              />\r\n              <BellIcon fontSize=\"2xl\" m={1} />\r\n            </MenuButton>\r\n            <MenuList pl={2}>\r\n              {!notification.length && \"No New Messages\"}\r\n              {notification.map((notif) => (\r\n                <MenuItem\r\n                  key={notif._id}\r\n                  onClick={() => {\r\n                    setSelectedChat(notif.chat);\r\n                    setNotification(notification.filter((n) => n !== notif));\r\n                  }}\r\n                >\r\n                  {notif.chat.isGroupChat\r\n                    ? `New Message in ${notif.chat.chatName}`\r\n                    : `New Message from ${getSender(user, notif.chat.users)}`}\r\n                </MenuItem>\r\n              ))}\r\n            </MenuList>\r\n          </Menu>\r\n          <Menu>\r\n            <MenuButton as={Button} bg=\"white\" rightIcon={<ChevronDownIcon />}>\r\n              <Avatar\r\n                size=\"sm\"\r\n                cursor=\"pointer\"\r\n                name={user.name}\r\n                src={user.pic}\r\n              />\r\n            </MenuButton>\r\n            <MenuList>\r\n              <ProfileModal user={user}>\r\n                <MenuItem>My Profile</MenuItem>{\" \"}\r\n              </ProfileModal>\r\n              <MenuDivider />\r\n              <MenuItem onClick={logoutHandler}>Logout</MenuItem>\r\n            </MenuList>\r\n          </Menu>\r\n        </div>\r\n      </Box>\r\n\r\n      <Drawer placement=\"left\" onClose={onClose} isOpen={isOpen}>\r\n        <DrawerOverlay />\r\n        <DrawerContent>\r\n          <DrawerHeader borderBottomWidth=\"1px\">Search Users</DrawerHeader>\r\n          <DrawerBody>\r\n            <Box d=\"flex\" pb={2}>\r\n              <Input\r\n                placeholder=\"Search by name or email\"\r\n                mr={2}\r\n                value={search}\r\n                onChange={(e) => setSearch(e.target.value)}\r\n              />\r\n              <Button onClick={handleSearch}>Go</Button>\r\n            </Box>\r\n            {loading ? (\r\n              <ChatLoading />\r\n            ) : (\r\n              searchResult?.map((user) => (\r\n                <UserListItem\r\n                  key={user._id}\r\n                  user={user}\r\n                  handleFunction={() => accessChat(user._id)}\r\n                />\r\n              ))\r\n            )}\r\n            {loadingChat && <Spinner ml=\"auto\" d=\"flex\" />}\r\n          </DrawerBody>\r\n        </DrawerContent>\r\n      </Drawer>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SideDrawer;\r\n","import { Box } from \"@chakra-ui/layout\";\r\nimport { useState } from \"react\";\r\nimport Chatbox from \"../components/Chatbox\";\r\nimport MyChats from \"../components/MyChats\";\r\nimport SideDrawer from \"../components/miscellaneous/SideDrawer\";\r\nimport { ChatState } from \"../Context/ChatProvider\";\r\n\r\nconst Chatpage = () => {\r\n  const [fetchAgain, setFetchAgain] = useState(false);\r\n  const { user } = ChatState();\r\n\r\n  return (\r\n    <div style={{ width: \"100%\" }} >\r\n      {user && <SideDrawer />}\r\n      <Box d=\"flex\" justifyContent=\"space-between\" w=\"100%\" h=\"91.5vh\" p=\"10px\" >\r\n        {user && <MyChats fetchAgain={fetchAgain} />}\r\n        {user && (\r\n          <Chatbox fetchAgain={fetchAgain} setFetchAgain={setFetchAgain} />\r\n        )}\r\n      </Box>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chatpage;\r\n","import \"./App.css\";\r\nimport Homepage from \"./Pages/Homepage\";\r\nimport { Route } from \"react-router-dom\";\r\nimport Chatpage from \"./Pages/Chatpage\";\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    \r\n    <div className=\"App\">\r\n      <div className=\"ball-1\"></div>\r\n      <div className=\"ball-2\"></div>\r\n      <div className=\"ball-3\"></div>\r\n      <div className=\"box\">\r\n       <Route path=\"/\" component={Homepage} exact />\r\n      <Route path=\"/chats\" component={Chatpage} /> \r\n    </div>\r\n    </div>\r\n    \r\n  \r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { ChakraProvider } from \"@chakra-ui/react\";\r\nimport ChatProvider from \"./Context/ChatProvider\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <ChakraProvider>\r\n    <BrowserRouter>\r\n      <ChatProvider>\r\n        <App />\r\n      </ChatProvider>\r\n    </BrowserRouter>\r\n  </ChakraProvider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}